df.hpi<-fread("https://www.fhfa.gov/DataTools/Downloads/Documents/HPI/HPI_master.csv")
df.hpi <- mutate(df.hpi,date=as.Date(ISOdate(yr,period*3,1)))
df.hpi <- df.hpi %>% group_by(level,place_name) %>% mutate(hpa=index_sa/lag(index_sa)-1,
hpa4 = index_sa/lag(index_sa,4)-1) %>% ungroup()
# list of CA index
# use grepl("CA",unique(df.hpi$place_name)) to find California
df.ca <- filter(df.hpi,grepl("CA",place_name)| place_name=="California" , hpi_type=="traditional", hpi_flavor=="purchase-only")
df.us <- filter(df.hpi, place_name=="United States", hpi_type=="traditional",hpi_flavor=="purchase-only", frequency=="quarterly")
})
??fread
if(!require("data.table")) install.packages('data.table')
library(data.table)
suppressMessages(  {
# Get house price data ----
df.hpi<-fread("https://www.fhfa.gov/DataTools/Downloads/Documents/HPI/HPI_master.csv")
df.hpi <- mutate(df.hpi,date=as.Date(ISOdate(yr,period*3,1)))
df.hpi <- df.hpi %>% group_by(level,place_name) %>% mutate(hpa=index_sa/lag(index_sa)-1,
hpa4 = index_sa/lag(index_sa,4)-1) %>% ungroup()
# list of CA index
# use grepl("CA",unique(df.hpi$place_name)) to find California
df.ca <- filter(df.hpi,grepl("CA",place_name)| place_name=="California" , hpi_type=="traditional", hpi_flavor=="purchase-only")
df.us <- filter(df.hpi, place_name=="United States", hpi_type=="traditional",hpi_flavor=="purchase-only", frequency=="quarterly")
})
ggplot(data= df.ca %>% filter(level=="State"), aes(x=date,y=index_sa,group=place_name))+
geom_line(color=rgb(103,180,75, maxColorValue = 256), size=1.05)+
geom_text(data=. %>% tail(1), aes(label="CA"),color=rgb(103,180,75, maxColorValue = 256),fontface="bold",nudge_y=5)+
geom_line(data=df.us %>% select(date,index_sa), aes(group="CA"),linetype=2, color=rgb(9, 177,240, maxColorValue = 256),size=1.05)+
geom_text(data=df.us %>% select(date,index_sa) %>% tail(1), aes(group="CA",label="US"),nudge_y=-5, color=rgb(9, 177,240, maxColorValue = 256))+
theme_ridges(font_family="Roboto")+
theme(text = element_text(color = "#27408b"))+
labs(y="House Price Index: 1991Q1=100",x="date (quarterly)",
title="House price index: CA vs US",
caption="@lenkiefer Source: FHFA purchase-only house price index, SA")
ggplot(data= df.ca %>% filter(level=="State"), aes(x=date,y=index_sa,group=place_name))+
geom_line(color=rgb(103,180,75, maxColorValue = 256), size=1.05)+
geom_text(data=. %>% tail(1), aes(label="CA"),color=rgb(103,180,75, maxColorValue = 256),fontface="bold",nudge_y=5)+
geom_line(data=df.us %>% select(date,index_sa), aes(group="CA"),linetype=2, color=rgb(9, 177,240, maxColorValue = 256),size=1.05)+
geom_text(data=df.us %>% select(date,index_sa) %>% tail(1), aes(group="CA",label="US"),nudge_y=-5, color=rgb(9, 177,240, maxColorValue = 256))+
theme_ridges(font_family="Roboto")+
theme(text = element_text(color = "#27408b"))+
labs(y="House Price Index: 1991Q1=100",x="date (quarterly)",
title="House price index: CA vs US",
caption="@lenkiefer Source: FHFA purchase-only house price index, SA")
update.packages(ggplot2)
update.packages('ggplot2')
ggplot(data= df.ca %>% filter(level=="State"), aes(x=date,y=index_sa,group=place_name))+
geom_line(color=rgb(103,180,75, maxColorValue = 256), size=1.05)+
geom_text(data=. %>% tail(1), aes(label="CA"),color=rgb(103,180,75, maxColorValue = 256),fontface="bold",nudge_y=5)+
geom_line(data=df.us %>% select(date,index_sa), aes(group="CA"),linetype=2, color=rgb(9, 177,240, maxColorValue = 256),size=1.05)+
geom_text(data=df.us %>% select(date,index_sa) %>% tail(1), aes(group="CA",label="US"),nudge_y=-5, color=rgb(9, 177,240, maxColorValue = 256))+
theme_ridges(font_family="Roboto")+
theme(text = element_text(color = "#27408b"))+
labs(y="House Price Index: 1991Q1=100",x="date (quarterly)",
title="House price index: CA vs US",
caption="@lenkiefer Source: FHFA purchase-only house price index, SA")
install.packages(c("cowplot", "git2r", "modeltools", "pander", "pillar", "survival", "XML", "zoo"))
rm(list=ls())
if(!require("dplyr")) install.packages('dplyr')
library(dplyr)
if(!require("data.table")) install.packages('data.table')
library(data.table)
if(!require("ggplot2")) install.packages('ggplot2')
library(ggplot2)
if(!require("maps")) install.packages('maps')
library(maps)
if(!require("mapproj")) install.packages('mapproj')
library(mapproj)
if(!require("scales")) install.packages('scales')
library(scales)
if(!require("tinytex")) install.packages('tinytex')
library(tinytex)
if(!require("knitr")) install.packages('knitr')
library(knitr)
if(!require("kableExtra")) install.packages('kableExtra')
library(kableExtra)
library(extrafont)
if(!require("tidyquant")) install.packages('tidyquant')
library(tidyquant)
if(!require("tidyverse")) install.packages('tidyverse')
library(tidyverse)
#library(tidyverse)
library(hrbrthemes)
library(lubridate)
library(pander)
if(!require("xlsx")) install.packages('xlsx')
library(xlsx)
library(zoo)
library(viridis)
library(ggridges)
#library(geofacet)
library(reshape)
# TODO: These should all move to a separate package
export_theme <- theme_ipsum() +
theme(text=element_text(family="Lato"),
panel.background = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.y = element_line(color='#999999'),
plot.title = element_text(size=15),
axis.title = element_text(size=14),
axis.text = element_text(size=12),
axis.text.x = element_text(angle = 0, vjust = .5),
axis.line = element_blank(),
legend.text=element_text(size=12))
orchard_palette <- c('#006c91', '#222222', '#848484','#990033', '#ff9900', '#660066', '#8b572a', '#e00e7c', '#4fcbe5', '#8a76d4', '#7ed321', '#d7bf1e', '#5891d4', '#d48758', '#e36e74')
format_si <- function(...) {
function(x) {
limits <- c(1e-9,  1e-6,  1e-3,  1e0,   1e3,
1e6,   1e9,   1e12,  1e15,  1e18,
1e21,  1e24)
prefix <- c("n",   "Âµ",   "m",   " ",   "K",
"MM",   "B",   "T",   "P",   "E",
"Z",   "Y")
# Vector with array indices according to position in intervals
i <- findInterval(abs(x), limits)
# Set prefix to " " for very small values < 1e-24
i <- ifelse(i==0, which(limits == 1e0), i)
paste(format(round(x/limits[i], 1),
trim=TRUE, scientific=FALSE, ...),
prefix[i], sep = '')
}
}
format_month <- function(...) {
function(x) {
paste(month(x),"'",substr(year(x), 3, 4), sep = '')
}
}
format_quarter <- function(...) {
function(x) {
paste('Q', quarter(x)," ",substr(year(x),3,4), sep = '')
}
}
get_state_name <- function(x) {
if(x %in% state.abb) {
to_return <- tolower(state.name[grep(x, state.abb)])
} else if (x %in% state.name) {
to_return <- tolower(x)
} else if (x == 'DC') {
to_return <- 'district of columbia'
} else if (x == 'US') {
to_return <- 'United States'
} else {
to_return <- 'Invalid State Name'
}
to_return
}
ggplot(data= df.ca %>% filter(level=="State"), aes(x=date,y=index_sa,group=place_name))+
geom_line(color=rgb(103,180,75, maxColorValue = 256), size=1.05)+
geom_text(data=. %>% tail(1), aes(label="CA"),color=rgb(103,180,75, maxColorValue = 256),fontface="bold",nudge_y=5)+
geom_line(data=df.us %>% select(date,index_sa), aes(group="CA"),linetype=2, color=rgb(9, 177,240, maxColorValue = 256),size=1.05)+
geom_text(data=df.us %>% select(date,index_sa) %>% tail(1), aes(group="CA",label="US"),nudge_y=-5, color=rgb(9, 177,240, maxColorValue = 256))+
theme_ridges(font_family="Roboto")+
theme(text = element_text(color = "#27408b"))+
labs(y="House Price Index: 1991Q1=100",x="date (quarterly)",
title="House price index: CA vs US",
caption="@lenkiefer Source: FHFA purchase-only house price index, SA")
suppressMessages(  {
# Get house price data ----
df.hpi<-fread("https://www.fhfa.gov/DataTools/Downloads/Documents/HPI/HPI_master.csv")
df.hpi <- mutate(df.hpi,date=as.Date(ISOdate(yr,period*3,1)))
df.hpi <- df.hpi %>% group_by(level,place_name) %>% mutate(hpa=index_sa/lag(index_sa)-1,
hpa4 = index_sa/lag(index_sa,4)-1) %>% ungroup()
# list of CA index
# use grepl("CA",unique(df.hpi$place_name)) to find California
df.ca <- filter(df.hpi,grepl("CA",place_name)| place_name=="California" , hpi_type=="traditional", hpi_flavor=="purchase-only")
df.us <- filter(df.hpi, place_name=="United States", hpi_type=="traditional",hpi_flavor=="purchase-only", frequency=="quarterly")
})
ggplot(data= df.ca %>% filter(level=="State"), aes(x=date,y=index_sa,group=place_name))+
geom_line(color=rgb(103,180,75, maxColorValue = 256), size=1.05)+
geom_text(data=. %>% tail(1), aes(label="CA"),color=rgb(103,180,75, maxColorValue = 256),fontface="bold",nudge_y=5)+
geom_line(data=df.us %>% select(date,index_sa), aes(group="CA"),linetype=2, color=rgb(9, 177,240, maxColorValue = 256),size=1.05)+
geom_text(data=df.us %>% select(date,index_sa) %>% tail(1), aes(group="CA",label="US"),nudge_y=-5, color=rgb(9, 177,240, maxColorValue = 256))+
theme_ridges(font_family="Roboto")+
theme(text = element_text(color = "#27408b"))+
labs(y="House Price Index: 1991Q1=100",x="date (quarterly)",
title="House price index: CA vs US",
caption="@lenkiefer Source: FHFA purchase-only house price index, SA")
remove.packages("ggplot2")
if(!require("ggplot2")) install.packages('ggplot2')
library(ggplot2)
if(!require("ggplot2")) install.packages('ggplot2')
library(ggplot2)
rm(list=ls())
if(!require("dplyr")) install.packages('dplyr')
library(dplyr)
if(!require("data.table")) install.packages('data.table')
library(data.table)
if(!require("ggplot2")) install.packages('ggplot2')
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
rm(list=ls())
if(!require("dplyr")) install.packages('dplyr')
library(dplyr)
if(!require("data.table")) install.packages('data.table')
library(data.table)
if(!require("ggplot2")) install.packages('ggplot2')
library(ggplot2)
if(!require("maps")) install.packages('maps')
library(maps)
if(!require("mapproj")) install.packages('mapproj')
library(mapproj)
if(!require("scales")) install.packages('scales')
library(scales)
if(!require("tinytex")) install.packages('tinytex')
library(tinytex)
if(!require("knitr")) install.packages('knitr')
library(knitr)
if(!require("kableExtra")) install.packages('kableExtra')
library(kableExtra)
library(extrafont)
if(!require("tidyquant")) install.packages('tidyquant')
library(tidyquant)
if(!require("tidyverse")) install.packages('tidyverse')
library(tidyverse)
#library(tidyverse)
library(hrbrthemes)
library(lubridate)
library(pander)
if(!require("xlsx")) install.packages('xlsx')
library(xlsx)
library(zoo)
library(viridis)
library(ggridges)
#library(geofacet)
library(reshape)
# TODO: These should all move to a separate package
export_theme <- theme_ipsum() +
theme(text=element_text(family="Lato"),
panel.background = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.y = element_line(color='#999999'),
plot.title = element_text(size=15),
axis.title = element_text(size=14),
axis.text = element_text(size=12),
axis.text.x = element_text(angle = 0, vjust = .5),
axis.line = element_blank(),
legend.text=element_text(size=12))
orchard_palette <- c('#006c91', '#222222', '#848484','#990033', '#ff9900', '#660066', '#8b572a', '#e00e7c', '#4fcbe5', '#8a76d4', '#7ed321', '#d7bf1e', '#5891d4', '#d48758', '#e36e74')
format_si <- function(...) {
function(x) {
limits <- c(1e-9,  1e-6,  1e-3,  1e0,   1e3,
1e6,   1e9,   1e12,  1e15,  1e18,
1e21,  1e24)
prefix <- c("n",   "Âµ",   "m",   " ",   "K",
"MM",   "B",   "T",   "P",   "E",
"Z",   "Y")
# Vector with array indices according to position in intervals
i <- findInterval(abs(x), limits)
# Set prefix to " " for very small values < 1e-24
i <- ifelse(i==0, which(limits == 1e0), i)
paste(format(round(x/limits[i], 1),
trim=TRUE, scientific=FALSE, ...),
prefix[i], sep = '')
}
}
format_month <- function(...) {
function(x) {
paste(month(x),"'",substr(year(x), 3, 4), sep = '')
}
}
format_quarter <- function(...) {
function(x) {
paste('Q', quarter(x)," ",substr(year(x),3,4), sep = '')
}
}
get_state_name <- function(x) {
if(x %in% state.abb) {
to_return <- tolower(state.name[grep(x, state.abb)])
} else if (x %in% state.name) {
to_return <- tolower(x)
} else if (x == 'DC') {
to_return <- 'district of columbia'
} else if (x == 'US') {
to_return <- 'United States'
} else {
to_return <- 'Invalid State Name'
}
to_return
}
ggplot(data= df.ca %>% filter(level=="State"), aes(x=date,y=index_sa,group=place_name))+
geom_line(color=rgb(103,180,75, maxColorValue = 256), size=1.05)+
geom_text(data=. %>% tail(1), aes(label="CA"),color=rgb(103,180,75, maxColorValue = 256),fontface="bold",nudge_y=5)+
geom_line(data=df.us %>% select(date,index_sa), aes(group="CA"),linetype=2, color=rgb(9, 177,240, maxColorValue = 256),size=1.05)+
geom_text(data=df.us %>% select(date,index_sa) %>% tail(1), aes(group="CA",label="US"),nudge_y=-5, color=rgb(9, 177,240, maxColorValue = 256))+
theme_ridges(font_family="Roboto")+
theme(text = element_text(color = "#27408b"))+
labs(y="House Price Index: 1991Q1=100",x="date (quarterly)",
title="House price index: CA vs US",
caption="@lenkiefer Source: FHFA purchase-only house price index, SA")
suppressMessages(  {
# Get house price data ----
df.hpi<-fread("https://www.fhfa.gov/DataTools/Downloads/Documents/HPI/HPI_master.csv")
df.hpi <- mutate(df.hpi,date=as.Date(ISOdate(yr,period*3,1)))
df.hpi <- df.hpi %>% group_by(level,place_name) %>% mutate(hpa=index_sa/lag(index_sa)-1,
hpa4 = index_sa/lag(index_sa,4)-1) %>% ungroup()
# list of CA index
# use grepl("CA",unique(df.hpi$place_name)) to find California
df.ca <- filter(df.hpi,grepl("CA",place_name)| place_name=="California" , hpi_type=="traditional", hpi_flavor=="purchase-only")
df.us <- filter(df.hpi, place_name=="United States", hpi_type=="traditional",hpi_flavor=="purchase-only", frequency=="quarterly")
})
ggplot(data= df.ca %>% filter(level=="State"), aes(x=date,y=index_sa,group=place_name))+
geom_line(color=rgb(103,180,75, maxColorValue = 256), size=1.05)+
geom_text(data=. %>% tail(1), aes(label="CA"),color=rgb(103,180,75, maxColorValue = 256),fontface="bold",nudge_y=5)+
geom_line(data=df.us %>% select(date,index_sa), aes(group="CA"),linetype=2, color=rgb(9, 177,240, maxColorValue = 256),size=1.05)+
geom_text(data=df.us %>% select(date,index_sa) %>% tail(1), aes(group="CA",label="US"),nudge_y=-5, color=rgb(9, 177,240, maxColorValue = 256))+
theme_ridges(font_family="Roboto")+
theme(text = element_text(color = "#27408b"))+
labs(y="House Price Index: 1991Q1=100",x="date (quarterly)",
title="House price index: CA vs US",
caption="@lenkiefer Source: FHFA purchase-only house price index, SA")
rm(list=ls())
setwd("/Users/ndelzingaro/Box/Term Length/SQL_Code/")
source('~/git_dir/risk_reporting/format/format.R')
#####Kabbage Data
source('~/devutils/jdbc_creds.R')
vDriver <- JDBC(driverClass='net.sourceforge.jtds.jdbc.Driver',
classPath=jdbc[['classpath']])
conn <- dbConnect(vDriver, url=jdbc[['url']],
user=jdbc[['user']],
password=jdbc[['pw']],
domain=jdbc[['domain']])
sql <- "select da.AccountKey, cast(cast(da.QualifyDateKey as char) as date) as Qualification_date ,da.CreditLimit as Current_limit,da.UserID, da.FirstApplicationDateKey,da.availableLineAtQualification,da.FICOScore, kue.userid, ut.UserProductId, bt.FeePercent, bt.TermLengthMonths, ut.CreatedDate, bt.BillingTableID,  fs.APR,
fs.FeeRate, fah3.CreditLimit, da.StateCode, da.EstimatedAnnualRevenue, da.BusinessYearStarted
from  Kabbageedw.dbo.dimaccount da
INNER JOIN koltpweb.customer.kuser kue on da.userid=kue.userid
INNER JOIN KOLTPWeb.Customer.UserProducts up on kue.kuserid=up.kuserid
LEFT JOIN KOLTPWeb.Underwriting.Terms ut ON up.UserProductId = ut.UserProductId and datediff(day, cast(cast(da.QualifyDateKey as char) as date), cast(ut.CreatedDate as date)) <= 30
LEFT JOIN KOLTPWeb.Funding.BillingTable AS bt ON bt.BillingTableID = ut.BillingTableId
Left Join [KBGAnalytics.prod.kabbage.com].DataAnalyticsIndia.[bbharadwaj].[FeeStructure] as fs on fs.Billingtable = bt.CoreCardTableName
left join Kabbageedw.dbo.factaccounthistory fah3 on fah3.accountkey = da.accountkey and datediff(day, cast(cast(da.QualifyDateKey as char) as date), cast(cast(fah3.filedatekey as char) as date)) = 30
where da.TestAccountFlag = 'False' AND da.PartnerName IN ( 'Kabbage', 'FLEETCOR', 'Sage', 'springleaf' ) and bt.TermLengthMonths in (6,12)
AND cast(cast(da.QualifyDateKey as char) as date) between '2018-11-01' and '2018-12-01'
order by AccountKey,TermLengthMonths,CreatedDate"
res <- dbSendQuery(conn, sql)
setwd("/Users/ndelzingaro/git_dir/")
source('~/git_dir/analytics/format/format.R')
# import yearly data (total, summed values, not means or medians)
# dataset compiled from historical Ross-CASE reports
library(readr)
fund_df <- read_csv("year_sum.csv")
setwd("/Users/ndelzingaro/git_dir/analytics/Cool_R_Analytics/Animated_Regression/")
source('~/git_dir/analytics/format/format.R')
library(readr)
fund_df <- read_csv("year_sum.csv")
theme_nick <- function (base_size = 12, base_family = "serif", ticks = TRUE)
{
ret <- theme_bw(base_family = base_family, base_size = base_size) +
theme(legend.background = element_blank(), legend.key = element_blank(),
panel.border = element_blank(),
strip.background = element_blank(),
panel.background = element_rect(fill = "#94B1C533", colour = NA),
plot.background = element_rect(fill = "#ffffff"),
axis.line = element_blank(),
panel.grid = element_blank(),
axis.text.x = element_text(colour = "#2a3132"),
axis.title.x = element_text(colour = "#2a3132"),
axis.title.y = element_text(colour="#2a3132"),
axis.text.y = element_text(colour="#2a3132"),
axis.title = element_text(colour = "#2a3132"),
plot.title = element_text(colour = "#2a3132",
margin = margin(0,0,10,0)),
plot.subtitle = element_text(colour = "#2a3132"),
plot.caption = element_text(colour = "#2a3132"),
legend.title = element_text(colour = "#2a3132"),
legend.text = element_text(colour = "#2a3132"))
if (!ticks) {
ret <- ret + theme(axis.ticks = element_blank())
}
ret
}
library(readr)
fund_df <- read_csv("year_sum.csv")
library(dplyr)
# quick look at data
glimpse(fund_df)
ggplot(fund_df, aes(x = year,
y = new_funds_raised)) +
geom_line()
fund_df <-
fund_df %>%
mutate(contact_alum_x100 = contactable_alumni * 100)
fund_tidy <-
fund_df %>%
gather(kpi, value, - year) %>%
mutate(kpi = as.factor(kpi))
library(tidyr)
fund_tidy <-
fund_df %>%
gather(kpi, value, - year) %>%
mutate(kpi = as.factor(kpi))
glimpse(fund_tidy)
View(fund_tidy)
View(fund_df)
View(fund_df)
View(fund_df)
?gather
View(fund_tidy)
library(gganimate)
# create animated plot
if(!require("gganimate")) install.packages('gganimate')
library(gganimate)
library('gganimate')
# create animated plot
if(!require("gganimate")) install.packages('gganimate')
# create animated plot
# install.packages('devtools')
devtools::install_github('thomasp85/gganimate')
# create animated plot
# install.packages('devtools')
devtools::install_github('thomasp85/gganimate')
# create animated plot
# install.packages('devtools')
devtools::install_github('thomasp85/gganimate')
library(transformr)
# create animated plot
# install.packages('devtools')
#devtools::install_github('thomasp85/gganimate')
library(gganimate)
if(!require("transformr")) install.packages('transformr')
first_animate <-
fund_tidy %>%
filter(kpi != "contactable_alumni") %>%
ggplot(aes(x = year,
y = value,
colour = kpi)) +
geom_line() +
transition_reveal(kpi, year) +
labs(title = "Trends in University Fundraising KPIs Over Time",
subtitle = "Data from Ross-CASE reports",
x = "Year",
y = 'Value',
caption = "y axis labelling omitted due to differences in scale between KPIs",
colour = "KPI") +
scale_colour_discrete(labels = c("Cash received",
"Contactable alumni",
"Fundraising staff",
"New funds raised")) +
scale_y_discrete(labels = NULL) +
theme_chris()
first_animate <-
fund_tidy %>%
filter(kpi != "contactable_alumni") %>%
ggplot(aes(x = year,
y = value,
colour = kpi)) +
geom_line() +
transition_reveal(kpi, year) +
labs(title = "Trends in University Fundraising KPIs Over Time",
subtitle = "Data from Ross-CASE reports",
x = "Year",
y = 'Value',
caption = "y axis labelling omitted due to differences in scale between KPIs",
colour = "KPI") +
scale_colour_discrete(labels = c("Cash received",
"Contactable alumni",
"Fundraising staff",
"New funds raised")) +
scale_y_discrete(labels = NULL) +
theme_nick()
install.packages("transformr")
first_animate <-
fund_tidy %>%
filter(kpi != "contactable_alumni") %>%
ggplot(aes(x = year,
y = value,
colour = kpi)) +
geom_line() +
transition_reveal(kpi, year) +
labs(title = "Trends in University Fundraising KPIs Over Time",
subtitle = "Data from Ross-CASE reports",
x = "Year",
y = 'Value',
caption = "y axis labelling omitted due to differences in scale between KPIs",
colour = "KPI") +
scale_colour_discrete(labels = c("Cash received",
"Contactable alumni",
"Fundraising staff",
"New funds raised")) +
scale_y_discrete(labels = NULL) +
theme_nick()
first_animated <- animate(first_animate, height = 500, width = 800)
# create animated plot
# install.packages('devtools')
devtools::install_github('thomasp85/gganimate')
remove.packages("gganimate")
# create animated plot
# install.packages('devtools')
devtools::install_github('thomasp85/gganimate')
library(gganimate)
first_animate <-
fund_tidy %>%
filter(kpi != "contactable_alumni") %>%
ggplot(aes(x = year,
y = value,
colour = kpi)) +
geom_line() +
transition_reveal(kpi, year) +
labs(title = "Trends in University Fundraising KPIs Over Time",
subtitle = "Data from Ross-CASE reports",
x = "Year",
y = 'Value',
caption = "y axis labelling omitted due to differences in scale between KPIs",
colour = "KPI") +
scale_colour_discrete(labels = c("Cash received",
"Contactable alumni",
"Fundraising staff",
"New funds raised")) +
scale_y_discrete(labels = NULL) +
theme_nick()
first_animated <- animate(first_animate, height = 500, width = 800)
