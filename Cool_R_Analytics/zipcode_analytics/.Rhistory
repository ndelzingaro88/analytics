install.packages(“RPostgreSQL”)
install.packages(RPostgreSQL)
install.packages("RPostgreSQL")
install.packages("ggplot2")
install.packages("scales")
install.packages("reshape2")
install.packages("dplyr")
install.packages("chron")
install.packages("zoo")
install.packages("quantmod")
install.packages("data.table")
install.packages("rJava", type='source')
install.packages("rJava", type='source')
install.packages("rJava", type='source')
install.packages("rJava", type='source')
install.packages(extrafont)
install.packages("extrafont")
install.packages("tidyverse")
install.packages("hrbrthemes")
extrafont::font_import() # May be needed on a new machine
#extrafont::font_import() # May be needed on a new machine
extrafont::loadfonts() # May be needed on a new machine
install.packages("devtools")
#extrafont::font_import() # May be needed on a new machine
#extrafont::loadfonts() # May be needed on a new machine
devtools::install_github("haozhu233/kableExtra")
source('~/db_creds.R')
source('~/devutils/db_creds.R')
install.packages("rJava", type='source')
R CMD javareconf
install.packages("rJava", type='source')
install.packages("rJava", type='source')
### Load libraries
library(tidyverse)
library(quantmod)
library(data.table)
library(viridis)  # for the colors
library(htmlTable)  # for the table
if(!require("htmlTable")) install.packages('htmlTable')
library(htmlTable)  # for the table
my.names <- data.table(var=c("A229RC0","CUSR0000SA0L2","CUUR0000SEHA","HPIPONM226S"),
name=c("income","cpi.less.shelter","cpi.rent","hpi"),
Description=c("Per capita disposable income",
"CPI-U All items less shelter",
"CPI-U Rent of primary residences",
"FHFA Purchase-only house price index"),
Source=c("U.S. Bureau of Economic Analysis",
"U.S. Bureau of Labor Statistics",
"U.S. Bureau of Labor Statistics",
"Federal Housing Finance Agency (FHFA)"))
htmlTable(my.names, caption="Data description",tfoot="Accessed via: St Louis Federal Reserve Economic Database (FRED)")
df= getSymbols('CUUR0000SEHA',src='FRED', auto.assign=F)
df= getSymbols('CUUR0000SEHA',src='FRED', auto.assign=F)
df = data.frame(date=time(df), coredata(df) )
df.hpi =getSymbols('HPIPONM226S',src='FRED', auto.assign=F)
df.hpi = data.frame(date=time(df.hpi), coredata(df.hpi) )
df.inc=getSymbols('A229RC0',src='FRED', auto.assign=F)
df.inc = data.frame(date=time(df.inc), coredata(df.inc) )
df2= getSymbols('CUSR0000SA0L2',src='FRED', auto.assign=F)
df2 = data.frame(date=time(df2), coredata(df2) )
# merge the data
df3<-merge(df,df.hpi,by="date")
df3<-merge(df3,df.inc,by="date")
df3<-merge(df3,df2,by="date")
dt<-data.table(df3)
# Gather the data to make it tidy
dt %>% gather(var,value,-date) %>% data.table() ->dt2
# Merge on variable names
dt2<-merge(dt2,my.names,by="var")
# Create and index with January 1991 = 100
# Count by var
dt2=dt2[,id:=1:.N, by=var]  # Index running from 1:N by group (var)
dt2=dt2[,var0:=100*value/sum(ifelse(id==1,value,0)),by=var] #create index
# Create caption
mycaption<- "@lenkiefer Source: House Prices: FHFA purchase-only house price index. Rent: U.S. Bureau of Labor Statistics (BLS) consumer price index rent of primary residence. Other Prices: BLS consumer price index all items less shelter. Income: U.S. Bureau of Economic Analysis per capita disposable personal income (Table 2.6.). All are seasonally adjusted."
# Wrap caption 120 characters:
mycaption <- paste0(strwrap(mycaption, 120), sep="", collapse="\n")
# Create Plot
ggplot(data=dt2,aes(x=date,y=var0,color=name,linetype=name))+
geom_line(size=1.1)+
scale_y_log10(breaks=c(100,125,150,175,200,250))+
theme_minimal()+theme(plot.caption=element_text(hjust=0),
legend.position="top")+
guides(linetype=F)+
scale_color_viridis(name="Variable",discrete=T,end=0.8)+
labs(x="",y="Index, January 1991=100 (log scale)",
title="Comparing house prices to rent, income and other prices",
caption=mycaption       )
#https://austinwehrwein.com/digital-humanities/creating-a-density-map-in-r-with-zipcodes/
if(!require("zipcode")) install.packages('zipcode')
library(zipcode)
library(tidyverse)
library(maps)
library(viridis)
if(!require("ggthemes")) install.packages('ggthemes')
library(ggthemes)
#devtools::install_github("hrbrmstr/albersusa")
#https://github.com/hrbrmstr/albersusa
library(albersusa)#installed via github
#path
setwd("~/git_dir/analytics/Cool_R_Analytics/zipcode_analytics/")
#data
fm<-Export <- read_csv("Export.csv")#the file we just downloaded
data(zipcode)
fm$zip<- clean.zipcodes(fm$zip)
#size by zip
fm.zip<-aggregate(data.frame(count=fm$FMID),list(zip=fm$zip,county=fm$County),length)
fm<- merge(fm.zip, zipcode, by='zip')
us<-map_data('state')
ggplot(fm,aes(longitude,latitude)) +
geom_polygon(data=us,aes(x=long,y=lat,group=group),color='gray',fill=NA,alpha=.35)+
geom_point(aes(color = count),size=.15,alpha=.25) +
xlim(-125,-65)+ylim(20,50)
fm.counties<-aggregate(fm$count,by=list(fm$county,fm$state),sum)
names(fm.counties)[1:2]<-c('county','state')
cty_sf <- counties_sf("aeqd")
cty_sf$county<-as.character(cty_sf$name)
cty_sf$state<-as.character(cty_sf$iso_3166_2)
data.fm<-left_join(cty_sf,fm.counties,by=c('state','county'))
data.fm$x<-log(data.fm$x)
data.fm$x[is.na(data.fm$x)]<-0
View(fm.counties)
data.fm %>%
ggplot(aes(fill = x, color = x)) +
geom_sf() +
scale_fill_viridis(option = "B",direction=-1) +
scale_color_viridis(option = "B",direction=-1) +
theme_map(base_size=11)
?gemo_sf
?geom_sf
data.fm %>%
ggplot(aes(fill = x, color = x)) +
#geom_sf() +
scale_fill_viridis(option = "B",direction=-1) +
scale_color_viridis(option = "B",direction=-1) +
theme_map(base_size=11)
View(data.fm)
ggplot(aes(fill = x, color = x)) +
#geom_sf() +
scale_fill_viridis(option = "B",direction=-1) +
scale_color_viridis(option =
ggplot(aes(fill = x, color = x)) +
#geom_sf() +
scale_fill_viridis(option = "B",direction=-1) +
scale_color_viridis(option = "B",direction=-1) +
theme_map(base_size=11)
install.packages(c("bit", "callr", "data.table", "dplyr", "ggjoy", "highr", "kableExtra", "MASS", "mgcv", "munsell", "pillar", "purrr", "reprex", "rJava", "rlang", "rmarkdown", "stringi", "survival", "tidyr", "utf8", "xlsx", "zoo"))
install.packages(c("bit", "callr", "data.table", "dplyr", "ggjoy", "highr", "kableExtra", "MASS", "mgcv", "munsell", "pillar", "purrr", "reprex", "rJava", "rlang", "rmarkdown", "stringi", "survival", "tidyr", "utf8", "xlsx", "zoo"))
install.packages(c("bit", "callr", "data.table", "dplyr", "ggjoy", "highr", "kableExtra", "MASS", "mgcv", "munsell", "pillar", "purrr", "reprex", "rJava", "rlang", "rmarkdown", "stringi", "survival", "tidyr", "utf8", "xlsx", "zoo"))
